getSharedDMS(DMS_BP_G2_CparvsTpar, 7)
getSharedDMS(DMS_BP_G2_CparvsTpar, 6) %in% getSharedDMS(DMS_BP_G2_CparvsTpar, 7)
DMSvec <- getSharedDMS(DMS_BP_G2_CparvsTpar, c(6, 7, 8))
DMSvec <- getSharedDMS(DMS_BP_G2_CparvsTpar, c(8))
DMSvec <- c(getSharedDMS(DMS_BP_G2_CparvsTpar, c(8)),
getSharedDMS(DMS_BP_G2_CparvsTpar, c(7)),
getSharedDMS(DMS_BP_G2_CparvsTpar, c(6)))
DMSvec
# Annotate that:
# Change the vector into a methobject:
df <- data.frame(chr=sapply(strsplit(DMSvec, " "), `[`, 1),
start=sapply(strsplit(DMSvec, " "), `[`, 2),
end=sapply(strsplit(DMSvec, " "), `[`, 2))
DMSvec <- c(getSharedDMS(DMS_BP_G2_CparvsTpar, c(8)),
getSharedDMS(DMS_BP_G2_CparvsTpar, c(7)))
# Annotate that:
# Change the vector into a methobject:
df <- data.frame(chr=sapply(strsplit(DMSvec, " "), `[`, 1),
start=sapply(strsplit(DMSvec, " "), `[`, 2),
end=sapply(strsplit(DMSvec, " "), `[`, 2))
# get annotation
anot <- getAnnotationFun(makeGRangesFromDataFrame(df))
which(getSharedDMS(DMS_BP_G2_CparvsTpar, 6) %in% getSharedDMS(DMS_BP_G2_CparvsTpar, 7))
df
DMSvec <- c(getSharedDMS(DMS_BP_G2_CparvsTpar, c(8)),
getSharedDMS(DMS_BP_G2_CparvsTpar, c(7)))
DMSvec
getSharedDMS(DMS_BP_G2_CparvsTpar, c(7)
DMSvec <- c(getSharedDMS(DMS_BP_G2_CparvsTpar, c(8)),
getSharedDMS(DMS_BP_G2_CparvsTpar, c(7)),
getSharedDMS(DMS_BP_G2_CparvsTpar, c(6)))
# Annotate that:
# Change the vector into a methobject:
df <- data.frame(chr=sapply(strsplit(DMSvec, " "), `[`, 1),
start=sapply(strsplit(DMSvec, " "), `[`, 2),
end=sapply(strsplit(DMSvec, " "), `[`, 2))
# get annotation
anot <- getAnnotationFun(makeGRangesFromDataFrame(df))
# Annotate that:
# Change the vector into a methobject:
df <- data.frame(chr=sapply(strsplit(DMSvec, " "), `[`, 1),
start=sapply(strsplit(DMSvec, " "), `[`, 2),
end=sapply(strsplit(DMSvec, " "), `[`, 2))
df
DMSvec <- c(getSharedDMS(DMS_BP_G2_CparvsTpar, c(8)),
getSharedDMS(DMS_BP_G2_CparvsTpar, c(7)),
getSharedDMS(DMS_BP_G2_CparvsTpar, c(6)))
DMSvec
# Annotate that:
# Change the vector into a methobject:
df <- data.frame(chr=sapply(strsplit(DMSvec, " "), `[`, 1),
start=sapply(strsplit(DMSvec, " "), `[`, 2),
end=sapply(strsplit(DMSvec, " "), `[`, 2))
# get annotation
anot <- getAnnotationFun(makeGRangesFromDataFrame(df))
anot
# get annotation
top3 <- head(df, 3)
anot <- getAnnotationFun(makeGRangesFromDataFrame(top3))
anot
top3
anot <- getAnnotationFun(makeGRangesFromDataFrame(top3))
top3
anot <- getAnnotationFun(makeGRangesFromDataFrame(top3))
makeGRangesFromDataFrame(top3)
getAnnotationFun
A = annotateWithGeneParts(target =makeGRangesFromDataFrame(top3), feature = annotBed12)
A
# Heckwolf 2020: To be associated to a gene, the pop-DMS had to be either inside the gene or,
# if intergenic, not further than 10 kb away from the TSS.
rows2rm = which((A@dist.to.TSS$dist.to.feature>10000 |
A@dist.to.TSS$dist.to.feature< -10000) &
rowSums(A@members) %in% 0)
rows2rm
A
A@dist.to.TSS
METHOBJ2=makeGRangesFromDataFrame(top3)
A = annotateWithGeneParts(target =METHOBJ2, feature = annotBed12)
# Heckwolf 2020: To be associated to a gene, the pop-DMS had to be either inside the gene or,
# if intergenic, not further than 10 kb away from the TSS.
rows2rm = which((A@dist.to.TSS$dist.to.feature>10000 |
A@dist.to.TSS$dist.to.feature< -10000) &
rowSums(A@members) %in% 0)
METHOBJ2 = METHOBJ[-rows2rm,]
METHOBJ=makeGRangesFromDataFrame(top3)
A = annotateWithGeneParts(target =METHOBJ, feature = annotBed12)
# Heckwolf 2020: To be associated to a gene, the pop-DMS had to be either inside the gene or,
# if intergenic, not further than 10 kb away from the TSS.
rows2rm = which((A@dist.to.TSS$dist.to.feature>10000 |
A@dist.to.TSS$dist.to.feature< -10000) &
rowSums(A@members) %in% 0)
METHOBJ2 = METHOBJ[-rows2rm,]
METHOBJ2
METHOBJ
rows2rm
METHOBJ
METHOBJ2 = METHOBJ[-c(rows2rm),]
METHOBJ2
rows2rm
rows2rm == 0
rows2rm
if(rows2rm == 0){
"lala"
}
if (rows2rm == 0){
"lala"
}
if (rows2rm == integer(0)){
"lala"
}
if (rows2rm == integer(0)){
"lala"
}
rows2rm
is.null(rows2rm)
rows2rm
is.empty(rows2rm)
is_empty(rows2rm)
if (is_empty(rows2rm)){
"lala"
}
### Function to get the annotation of a methylkit object (methylDiff or methylBase)
getAnnotationFun <- function(METHOBJ){
A = annotateWithGeneParts(target = as(METHOBJ,"GRanges"), feature = annotBed12)
# Heckwolf 2020: To be associated to a gene, the pop-DMS had to be either inside the gene or,
# if intergenic, not further than 10 kb away from the TSS.
rows2rm = which((A@dist.to.TSS$dist.to.feature>10000 |
A@dist.to.TSS$dist.to.feature< -10000) &
rowSums(A@members) %in% 0)
if (is_empty(rows2rm)){
METHOBJ2 = METHOBJ
} else {
METHOBJ2 = METHOBJ[-rows2rm,]
}
## Re annotate the subsetted object
B = annotateWithGeneParts(as(METHOBJ2,"GRanges"),annotBed12)
## Get genes associated
C = getAssociationWithTSS(B)
## Get annotations for these genes
subAnnot <- data.frame(subset(annotGff3, Name %in% C$feature.name))
return(subAnnot$Note)
}
anot <- getAnnotationFun(makeGRangesFromDataFrame(top3))
anot
top3
anot
anot <- getAnnotationFun(makeGRangesFromDataFrame(top3))
anot
# get annotation
top3 <- head(df, 1)
anot <- getAnnotationFun(makeGRangesFromDataFrame(top3))
anot
DMSvec
anot
machine="mythinkpad" # define the machine we work on
loadALL = FALSE # only load CpG shared by half fish per trt group
source("R02.3_DATALOAD.R")
## Data getting loaded:
uniteCovALL_woSexAndUnknowChr #-> 55530 CpG positions shared by all fish
uniteCov6_G1_woSexAndUnknowChrOVERLAP #-> 1001880 CpG positions shared by half the parents in each trt group, overlapping with the parental ones
uniteCov14_G2_woSexAndUnknowChrOVERLAP#-> 1001880 CpG positions shared by half the offspring in each trt group, overlapping with the offspring ones
## Kaufmann et al. 2014: Body condition of the G2 fish, an estimate of fish health and a predictor
# of energy reserves and reproductive success, was calculated using there residuals from the
# regression of body mass on body length (Chellappaet al.1995).
fullMetadata_OFFS$BCI <- residuals(lmer(Wnettofin ~ Slfin * Sex + (1|brotherPairID), data=fullMetadata_OFFS))
## and for parents (no sex difference, only males):
fullMetadata_PAR$BCI <- residuals(lmer(Wnettofin ~ Slfin + (1|brotherPairID), data=fullMetadata_PAR))
## Effect of paternal exposure on tolerance:
modTol <- lme(BCI ~ patTrt + patTrt:No.Worms,random=~1|brotherPairID,data=fullMetadata_OFFS)
anova(modTol)
step(modTol)
stepAIC(modTol)
## Effect of paternal exposure on tolerance:
modTol <- lme(BCI ~ patTrt + patTrt:No.Worms,random=~1|brotherPairID,data=fullMetadata_OFFS, REML=F)
## Effect of paternal exposure on tolerance:
modTol <- lme(BCI ~ patTrt + patTrt:No.Worms,random=~1|brotherPairID,data=fullMetadata_OFFS)
anova(modTol)
modTol <- lmer(BCI ~ patTrt + patTrt:No.Worms + (1|brotherPairID), data=fullMetadata_OFFS)
anova(modTol)
step(modTol)
?step
lmerTest::step
lmerTest::step(modTol)
modTol
lmerTest::step(modTol)
library(cAIC4)
install.packages("cAIC4")
# install.packages("cAIC4")
library(cAIC4)
stepcAIC(modTol)
fullMetadata_OFFS$brotherPairID
ggpredict(modTol)
pred <- ggpredict(modTol)
ggplot(pred)
plot(pred)
plot(pred, add.data = TRUE)
pred <- ggpredict(modTol, terms = c("patTrt", "No.Worms"))
plot(pred, add.data = TRUE)
pred <- ggpredict(modTol, terms = c("No.Worms", "patTrt"))
plot(pred, add.data = TRUE)
## Effect of treatment groups of offspring on body condition:
## Kaufmann et al. 2014:
# The linear mixed effect model (nlme function in R) included G2 body condition as dependent variable,
# sex, G2 treatment (exposed vs. control), paternal G1 treatment (exposed vs. control)
# and their interactions as fixed effects as well as maternal G2 half-sibship identity as a random effect
mod1 <- lme(BCI ~ offsTrt * patTrt, random=~1|brotherPairID,data=fullMetadata_OFFS)
anova(mod1) # strong significant effect of both offspring trt & paternal + interactions
mod1.2 <- lme(BCI ~  trtG1G2, random=~1|brotherPairID,data=fullMetadata_OFFS)
## pairwise posthoc test
emmeans(mod1.2, list(pairwise ~ trtG1G2), adjust = "tukey")
ggplot(fullMetadata_OFFS, aes(x=trtG1G2, y = BCI, fill=trtG1G2))+
geom_boxplot()+
geom_signif(comparisons = list(c("NE_control", "NE_exposed")),
map_signif_level=TRUE, annotations="***",
y_position = 150, tip_length = 0, vjust=0.4) +
geom_signif(comparisons = list(c("NE_exposed", "E_control")),
map_signif_level=TRUE, annotations="***",
y_position = 200, tip_length = 0, vjust=0.4) +
geom_signif(comparisons = list(c("NE_exposed", "E_exposed")),
map_signif_level=TRUE, annotations="***",
y_position = 250, tip_length = 0, vjust=0.4) +
scale_fill_manual(values = colOffs)+
theme_bw() + theme(legend.position = "none")
############################################
## Calculate tolerance as a reaction norm ##
############################################
mod1 <- lmer(BCI ~ No.Worms : trtG1G2 + (1|brotherPairID) + (1|Sex),
data = fullMetadata_OFFS[fullMetadata_OFFS$trtG1G2 %in% c("NE_exposed", "E_exposed"),],
REML = FALSE)
mod0 <- lmer(BCI ~ No.Worms + (1|brotherPairID) + (1|Sex),
data = fullMetadata_OFFS[fullMetadata_OFFS$trtG1G2 %in% c("NE_exposed", "E_exposed"),],
REML = FALSE)
lrtest(mod0, mod1)
modFULL <- lmer(BCI ~ No.Worms : trtG1G2 + (1|brotherPairID) + (1|Sex),
data = fullMetadata_OFFS[fullMetadata_OFFS$trtG1G2 %in% c("NE_exposed", "E_exposed"),])
coef(modFULL)
# plot fixed effects
pred <- ggpredict(modFULL, terms = c("No.Worms", "trtG1G2"))
plot(pred, add.data = TRUE)+ theme_bw() +
scale_x_continuous(name = "Number of parasites", breaks = 1:10)+
scale_y_continuous("Body Condition Index")+
ggtitle("Predicted values of Body Condition Index")+
scale_color_manual(values = colOffs[c(2,4)])
## And in fathers:
modFULL <- lmer(BCI ~ No.Worms + (1|Family),
data = fullMetadata_PAR[fullMetadata_PAR$trtG1G2 %in% "Exposed",])
coef(modFULL)
# plot fixed effects
pred <- ggpredict(modFULL, terms = "No.Worms")
plot(pred, add.data = TRUE)+ theme_bw() +
scale_x_continuous(name = "Number of parasites", breaks = 1:10)+
scale_y_continuous("Body Condition Index")+
ggtitle("Predicted values of Body Condition Index")
## Nbr samples: 135
nrow(fullMetadata)
# Mean nbr of million reads: 11.3
mean(fullMetadata$M.Seqs_rawReads)
# 95% confidence interval: 0.33
qnorm(0.975)*sd(fullMetadata$M.Seqs_rawReads)/sqrt(nrow(fullMetadata))
# Average mapping efficiency +/-SD = 85.4% +/-0.48
mean(fullMetadata$MappingEfficiency.BSBoldvsGynogen)
qnorm(0.975)*sd(fullMetadata$MappingEfficiency.BSBoldvsGynogen)/sqrt(nrow(fullMetadata))
mycalcRMS <- function(myUniteCov, myMetaData){
percMethMat = methylKit::percMethylation(myUniteCov)
# create a dataframe with all info
percMethDF = data.frame(SampleID = colnames(percMethMat),
## number of methylated sites
Nbr_methCpG = colSums(percMethMat>=70 & !is.na(percMethMat)),#512493
## number of sites covered in this sample
Nbr_coveredCpG = colSums(!is.na(percMethMat)), #1015735
## number of sites NOT covered in this sample
Nbr_NOTcoveredCpG = colSums(is.na(percMethMat)))
## RMS in this sample based on covered sites
percMethDF$RMS_coveredCpG = percMethDF$Nbr_methCpG / percMethDF$Nbr_coveredCpG #0.5045538
## merge with original metadata:
myMetaData = merge(myMetaData, percMethDF)
# calculate also RMS global, considering CpG covered or not (to compare)
myMetaData$RMS_allCpG_coveredOrNot = myMetaData$Nbr_methCpG / (myMetaData$M.Seqs_rawReads*10e6)
# calculate residuals of nbr of methCpG by nbr of covered CpG
myMetaData$res_Nbr_methCpG_Nbr_coveredCpG = residuals(
lm(myMetaData$Nbr_methCpG ~ myMetaData$Nbr_coveredCpG))
return(myMetaData)
}
fullMetadata_ALL <- mycalcRMS(uniteCovALL_woSexAndUnknowChr, fullMetadata)
fullMetadata_PAR_half <- mycalcRMS(uniteCov6_G1_woSexAndUnknowChrOVERLAP, fullMetadata_PAR)
fullMetadata_OFFS_half  <- mycalcRMS(uniteCov14_G2_woSexAndUnknowChrOVERLAP, fullMetadata_OFFS)
## Question: in our 5 datasets,
## Is there a correlation between nbr of methylated sites and coverage?
cor.test(fullMetadata_PAR_half$Nbr_coveredCpG,
fullMetadata_PAR_half$Nbr_methCpG, method = "spearman")
## S = 350, p-value = 2.15e-06, rho = 0.85
ggplot(fullMetadata_PAR_half, aes(x=Nbr_coveredCpG, y=Nbr_methCpG))+
geom_smooth(method = "lm", col="black")+
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = c("grey", "red")) +
theme_bw() + ggtitle(label = "Parents, CpG shared by half fish/trt")
## Check after RMS correction for coverage bias: CORRECTED (p-value = 0.4485)
cor.test(fullMetadata_PAR_half$Nbr_coveredCpG,
fullMetadata_PAR_half$RMS_coveredCpG, method = "spearman")
ggplot(fullMetadata_PAR_half, aes(x=Nbr_coveredCpG, y=RMS_coveredCpG))+
geom_smooth(method = "lm", col="black")+
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = c("grey", "red")) +
theme_bw() + ggtitle(label = "Parents, CpG shared by half fish/trt")
## and with residuals: COMPLETELY CORRECTED p-value = 0.9562
cor.test(fullMetadata_PAR_half$Nbr_coveredCpG,
fullMetadata_PAR_half$res_Nbr_methCpG_Nbr_coveredCpG, method = "spearman")
ggplot(fullMetadata_PAR_half, aes(x=Nbr_coveredCpG, y=res_Nbr_methCpG_Nbr_coveredCpG))+
geom_smooth(method = "lm", col="black")+
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = c("grey", "red")) +
theme_bw() + ggtitle(label = "Parents, CpG shared by half fish/trt")
############
## Offspring:
cor.test(fullMetadata_OFFS_half$Nbr_coveredCpG,
fullMetadata_OFFS_half$Nbr_methCpG, method = "spearman")
## S = 20254, p-value < 2.2e-16 rho = 0.91
ggplot(fullMetadata_OFFS_half, aes(x=Nbr_coveredCpG, y=Nbr_methCpG))+
geom_smooth(method = "lm", col="black")+
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = colOffs) +
scale_x_continuous("Number of cytosines covered") +
scale_y_continuous("Number of methylated cytosines") +
theme_bw() + ggtitle(label = "Offspring, CpG shared by half fish/trt")
## Plot distance to residuals:
fit <- lm(Nbr_methCpG ~ Nbr_coveredCpG, data = fullMetadata_OFFS_half)
plotdf <- fullMetadata_OFFS_half
plotdf$predicted <- predict(fit)   # Save the predicted values
plotdf$residuals <- residuals(fit)
ggplot(plotdf, aes(x=Nbr_coveredCpG, y=Nbr_methCpG))+
geom_smooth(method = "lm", col="black")+
geom_segment(aes(xend = Nbr_coveredCpG, yend = predicted), col = "grey") +
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = colOffs) +
scale_x_continuous("Number of cytosines covered") +
scale_y_continuous("Number of methylated cytosines") +
theme_bw() + ggtitle(label = "Offspring, CpG shared by half fish/trt")
## Check after RMS correction for coverage bias: SEMI CORRECTED (p-value = 0.01, rho = -0.24)
cor.test(fullMetadata_OFFS_half$Nbr_coveredCpG,
fullMetadata_OFFS_half$RMS_coveredCpG, method = "spearman")
ggplot(fullMetadata_OFFS_half, aes(x=Nbr_coveredCpG, y=RMS_coveredCpG))+
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = colOffs) +
geom_smooth(method = "lm", col="black")+
theme_bw() + ggtitle(label = "Offspring, CpG shared by half fish/trt")
## and with residuals: COMPLETELY CORRECTED p-value = 0.51
cor.test(fullMetadata_OFFS_half$Nbr_coveredCpG,
fullMetadata_OFFS_half$res_Nbr_methCpG_Nbr_coveredCpG, method = "spearman")
ggplot(fullMetadata_OFFS_half, aes(x=Nbr_coveredCpG, y=res_Nbr_methCpG_Nbr_coveredCpG))+
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = colOffs) +
geom_smooth(method = "lm", col="black")+
scale_x_continuous("Number of cytosines covered") +
scale_y_continuous("Residuals of number of methylated cytosines\n on number of cytosines covered") +
theme_bw() + ggtitle(label = "Offspring, CpG shared by half fish/trt")
################
## Does Sex affect the number of methylated sites? YES
## + family as random factor
modFull <- lmer(Nbr_methCpG ~ trtG1G2 * Sex + (1|brotherPairID),
data = fullMetadata_OFFS_half, REML = F) # REML =F for model comparison
mod_noSex <- lmer(Nbr_methCpG ~ trtG1G2 + (1|brotherPairID),
data = fullMetadata_OFFS_half, REML = F)
mod_noTrt <- lmer(Nbr_methCpG ~ Sex + (1|brotherPairID),
data = fullMetadata_OFFS_half, REML = F)
mod_noInteractions <- lmer(Nbr_methCpG ~ trtG1G2 + Sex + (1|brotherPairID),
data = fullMetadata_OFFS_half, REML = F)
lrtest(modFull, mod_noSex) # sex is VERY VERY significant p = 0.001776 **
lrtest(modFull, mod_noTrt) # trt is signif p = 0.0208 *
lrtest(modFull, mod_noInteractions) # interactions are significant 0.0151 *
## Plot
ggplot(fullMetadata_OFFS_half, aes(trtG1G2, Nbr_methCpG, group=interaction(trtG1G2, Sex))) +
facet_grid(~Sex) +
geom_violin() +
geom_boxplot(aes(fill = trtG1G2), width = 0.2) +
geom_jitter(width = .1, size = 1, pch = 21, fill = "white") +
scale_fill_manual(values = colOffs) +
theme_bw()  + theme(legend.position = "none")
################
## Does Sex affect the residuals of nbr of methylated sites by nbr of sites? YES
## + family as random factor
modFull <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ trtG1G2 * Sex + (1|brotherPairID),
data = fullMetadata_OFFS_half, REML = F) # REML =F for model comparison
mod_noSex <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ trtG1G2 + (1|brotherPairID),
data = fullMetadata_OFFS_half, REML = F)
mod_noTrt <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ Sex + (1|brotherPairID),
data = fullMetadata_OFFS_half, REML = F)
mod_noInteractions <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ trtG1G2 + Sex + (1|brotherPairID),
data = fullMetadata_OFFS_half, REML = F)
lrtest(modFull, mod_noSex) # sex is significant p = 0.0002124 ***
lrtest(modFull, mod_noTrt) # trt is not significant any longer
lrtest(modFull, mod_noInteractions) # interactions are are not significant any longer
## Plot
ggplot(fullMetadata_OFFS_half, aes(trtG1G2, res_Nbr_methCpG_Nbr_coveredCpG,
group=interaction(trtG1G2, Sex))) +
facet_grid(~Sex) +
geom_violin() +
geom_boxplot(aes(fill = trtG1G2), width = 0.2) +
geom_jitter(width = .1, size = 1, pch = 21, fill = "white") +
scale_fill_manual(values = colOffs) +
theme_bw() + theme(legend.position = "none")
modFULL <- lmer(BCI ~ No.Worms : trtG1G2 + (1|brotherPairID) + (1|Sex),
data = fullMetadata_OFFS_half[fullMetadata_OFFS_half$trtG1G2 %in% c("NE_exposed", "E_exposed"),])
coef(modFULL)[1]
predict <- ggpredict(modFULL, terms = c("No.Worms", "trtG1G2"))
slope_NE_exposed <- predict[predict$group %in% "NE_exposed",][2,2] - predict[predict$group %in% "NE_exposed",][1,2]
slope_E_exposed <- predict[predict$group %in% "E_exposed",][2,2] - predict[predict$group %in% "E_exposed",][1,2]
slope_NE_exposed
meanMeth_NE_exposed <- mean(fullMetadata_OFFS_half[fullMetadata_OFFS_half$trtG1G2 %in% c("NE_exposed"),"res_Nbr_methCpG_Nbr_coveredCpG"])
meanMeth_E_exposed <- mean(fullMetadata_OFFS_half[fullMetadata_OFFS_half$trtG1G2 %in% c("E_exposed"),"res_Nbr_methCpG_Nbr_coveredCpG"])
df <- data.frame(group = c("NE_exposed", "E_exposed"),
slope = c(slope_NE_exposed, slope_E_exposed),
meanMeth = c(meanMeth_NE_exposed, meanMeth_E_exposed))
ggplot(df, aes(x = slope, y = meanMeth, col =group))+
geom_point() + theme_bw()
modTOLfamsex <- lm(BCI ~ No.Worms : trtG1G2 : brotherPairID : Sex,
data = fullMetadata_OFFS_half[fullMetadata_OFFS_half$trtG1G2 %in% c("NE_exposed", "E_exposed"),])
coef(modTOLfamsex)[1]
predTOLfamsex <- ggpredict(modTOLfamsex, terms = c("trtG1G2", "brotherPairID", "Sex"))
plot(predTOLfamsex)
## Plot
ggplot(fullMetadata_OFFS_half, aes(trtG1G2, res_Nbr_methCpG_Nbr_coveredCpG,
group=interaction(trtG1G2, Sex))) +
facet_grid(~Sex) +
geom_violin() +
geom_boxplot(aes(fill = trtG1G2), width = 0.2) +
geom_jitter(width = .1, size = 1, pch = 21, fill = "white") +
scale_fill_manual(values = colOffs) +
theme_bw() + theme(legend.position = "none")
########################################################################
## Are mean residuals meth sites different following tolerance slope? ##
########################################################################
modTol <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG*No.Worms + (1|brotherPairID), data=fullMetadata_OFFS)
########################################################################
## Are mean residuals meth sites different following tolerance slope? ##
########################################################################
mod_Tol.Meth <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG*No.Worms + (1|brotherPairID), data=fullMetadata_OFFS_half)
stepcAIC(mod_Tol.Meth)
pred <- ggpredict(mod_Tol.Meth, terms = c("No.Worms", "res_Nbr_methCpG_Nbr_coveredCpG"))
plot(pred, add.data = TRUE)
fullMetadata_OFFS_half$res_Nbr_methCpG_Nbr_coveredCpG
log(fullMetadata_OFFS_half$res_Nbr_methCpG_Nbr_coveredCpG)
(fullMetadata_OFFS_half$res_Nbr_methCpG_Nbr_coveredCpG)/100
(fullMetadata_OFFS_half$res_Nbr_methCpG_Nbr_coveredCpG)/1000
########################################################################
## Are mean residuals meth sites different following tolerance slope? ##
########################################################################
mod_Tol.Meth <- lmer(BCI ~ (res_Nbr_methCpG_Nbr_coveredCpG/1000)*No.Worms + (1|brotherPairID), data=fullMetadata_OFFS_half)
fullMetadata_OFFS_half$res_Nbr_methCpG_Nbr_coveredCpG_div1000 <- (fullMetadata_OFFS_half$res_Nbr_methCpG_Nbr_coveredCpG)/1000
########################################################################
## Are mean residuals meth sites different following tolerance slope? ##
########################################################################
mod_Tol.Meth <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000*No.Worms + (1|brotherPairID), data=fullMetadata_OFFS_half)
stepcAIC(mod_Tol.Meth)
mod_Tol.Meth <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000*No.Worms + (1|brotherPairID), data=fullMetadata_OFFS_half, REML = F)
mod_Tol.Meth_Noint <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000+No.Worms + (1|brotherPairID), data=fullMetadata_OFFS_half, REML = F)
lrtest(mod_Tol.Meth, mod_Tol.Meth_Noint)
mod_Tol.Meth <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000*No.Worms + (1|brotherPairID)+ (1|Sex), data=fullMetadata_OFFS_half, REML = F)
mod_Tol.Meth_Noint <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000+No.Worms + (1|brotherPairID) + (1|Sex),
data=fullMetadata_OFFS_half, REML = F)
lrtest(mod_Tol.Meth, mod_Tol.Meth_Noint)
mod_Tol.Meth <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000*No.Worms + (1|brotherPairID)+ (1|Sex),
data=fullMetadata_OFFS_half, REML = F)
mod_Tol.Meth_Noint <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000+No.Worms + (1|brotherPairID) + (1|Sex),
data=fullMetadata_OFFS_half, REML = F)
lrtest(mod_Tol.Meth, mod_Tol.Meth_Noint)
pred <- ggpredict(mod_Tol.Meth, terms = c("No.Worms", "res_Nbr_methCpG_Nbr_coveredCpG"))
pred <- ggpredict(mod_Tol.Meth, terms = c("No.Worms", "res_Nbr_methCpG_Nbr_coveredCpG_div1000"))
plot(pred, add.data = TRUE)
############################################################
## Are mean residuals meth sites different following BCI? ##
############################################################
mod_Tol.Meth <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000 + (1|brotherPairID)+ (1|Sex),
data=fullMetadata_OFFS_half, REML = F)
############################################################
## Are mean residuals meth sites different following BCI? ##
############################################################
mod_BCI.Meth <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000 + (1|brotherPairID)+ (1|Sex),
data=fullMetadata_OFFS_half, REML = F)
anova(mod_BCI.Meth)
mod_BCI.Meth.NULL <- lmer(BCI ~ 1 + (1|brotherPairID)+ (1|Sex),
data=fullMetadata_OFFS_half, REML = F)
lmer(mod_BCI.Meth, mod_BCI.Meth.NULL)
############################################################
## Are mean residuals meth sites different following BCI? ##
############################################################
mod_BCI.Meth <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000 + (1|brotherPairID)+ (1|Sex),
data=fullMetadata_OFFS_half, REML = F)
mod_BCI.Meth.NULL <- lmer(BCI ~ 1 + (1|brotherPairID)+ (1|Sex),
data=fullMetadata_OFFS_half, REML = F)
lmer(mod_BCI.Meth, mod_BCI.Meth.NULL)
lrtest(mod_BCI.Meth, mod_BCI.Meth.NULL)
fullMetadata_OFFS_half$outcome
## And just among infected?
mod_BCI.Meth_inf <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000 + (1|brotherPairID)+ (1|Sex),
data=fullMetadata_OFFS_half[fullMetadata_OFFS_half$outcome %in% "infected",], REML = F)
mod_BCI.Meth_inf.NULL <- lmer(BCI ~ 1 + (1|brotherPairID)+ (1|Sex),
data=fullMetadata_OFFS_half[fullMetadata_OFFS_half$outcome %in% "infected",], REML = F)
lrtest(mod_BCI.Meth_inf, mod_BCI.Meth_inf.NULL)
## And just among infected?
mod_Tol.Meth.inf <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000*No.Worms + (1|brotherPairID)+ (1|Sex),
data=fullMetadata_OFFS_half[fullMetadata_OFFS_half$outcome %in% "infected",], REML = F)
mod_Tol.Meth_Noint.inf <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000+No.Worms + (1|brotherPairID) + (1|Sex),
data=fullMetadata_OFFS_half[fullMetadata_OFFS_half$outcome %in% "infected",], REML = F)
lrtest(mod_Tol.Meth.inf, mod_Tol.Meth_Noint.inf)
pred <- ggpredict(mod_Tol.Meth, terms = c("No.Worms", "res_Nbr_methCpG_Nbr_coveredCpG_div1000"))
plot(pred, add.data = TRUE)
mod_Tol.Meth <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000*No.Worms + (1|brotherPairID)+ (1|Sex),
data=fullMetadata_OFFS_half, REML = F)
mod_Tol.Meth_Noint <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000+No.Worms + (1|brotherPairID) + (1|Sex),
data=fullMetadata_OFFS_half, REML = F)
lrtest(mod_Tol.Meth, mod_Tol.Meth_Noint)
## And just among infected?
mod_Tol.Meth.inf <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000*No.Worms + (1|brotherPairID)+ (1|Sex),
data=fullMetadata_OFFS_half[fullMetadata_OFFS_half$outcome %in% "infected",], REML = F)
mod_Tol.Meth_Noint.inf <- lmer(BCI ~ res_Nbr_methCpG_Nbr_coveredCpG_div1000+No.Worms + (1|brotherPairID) + (1|Sex),
data=fullMetadata_OFFS_half[fullMetadata_OFFS_half$outcome %in% "infected",], REML = F)
lrtest(mod_Tol.Meth.inf, mod_Tol.Meth_Noint.inf)
pred <- ggpredict(mod_Tol.Meth, terms = c("No.Worms", "res_Nbr_methCpG_Nbr_coveredCpG_div1000"))
plot(pred, add.data = TRUE)
